/**
 * 1 用 node 执行 getOperateList.js，抓回缺失的模板slugTitle列表，执行结果为待抓取题目的 titleSlug 列表
 * 2 打开 getPageData.js，用上面步骤的执行结果替换第 15 行的 operateList
 * 3 从页面里得到有效的 csrfToken，更新在 getPageData.js 第 22 行
 * 4 把修改过的 getPageData.js 代码帖到 https://leetcode-cn.com/problemset/all/ 页面的 console 里跑
 * 5 从 console 得到输出后，把它帖到 data.js 里，用 node 执行 generateTemplate.js 生成模板
 * 6 生成完后把 data.js 里的数据移动到 oldData.js 里备份。
 * 
 * 本工具用来从网站上获取题目数据，用于生成模板。
 * 本工具获取数据的 graphQl 查询受跨站请求限制，必须在 leetcode-cn.com 的域名下执行。
 * https://leetcode-cn.com/problemset/all/ 存在jQuery，所以直接使用 jQuery 的 ajax 工具
 */

//把 getOperateList.js 生成的 var 语句粘贴在下面，然后全文选中复制，粘贴到浏览器里执行
var operateList = ["two-sum","add-two-numbers","longest-substring-without-repeating-characters","median-of-two-sorted-arrays","longest-palindromic-substring","zigzag-conversion","reverse-integer","string-to-integer-atoi","palindrome-number","regular-expression-matching","container-with-most-water","integer-to-roman","roman-to-integer","longest-common-prefix","3sum","3sum-closest","letter-combinations-of-a-phone-number","4sum","remove-nth-node-from-end-of-list","valid-parentheses","merge-two-sorted-lists","generate-parentheses","merge-k-sorted-lists","swap-nodes-in-pairs","reverse-nodes-in-k-group","remove-duplicates-from-sorted-array","remove-element","implement-strstr","divide-two-integers","substring-with-concatenation-of-all-words","next-permutation","longest-valid-parentheses","search-in-rotated-sorted-array","find-first-and-last-position-of-element-in-sorted-array","search-insert-position","valid-sudoku","sudoku-solver","count-and-say","combination-sum","combination-sum-ii","first-missing-positive","trapping-rain-water","multiply-strings","wildcard-matching","jump-game-ii","permutations","permutations-ii","rotate-image","group-anagrams","powx-n","n-queens","n-queens-ii","maximum-subarray","spiral-matrix","jump-game","merge-intervals","insert-interval","length-of-last-word","spiral-matrix-ii","permutation-sequence","rotate-list","unique-paths","unique-paths-ii","minimum-path-sum","valid-number","plus-one","add-binary","text-justification","sqrtx","climbing-stairs","simplify-path","edit-distance","set-matrix-zeroes","search-a-2d-matrix","sort-colors","minimum-window-substring","combinations","subsets","word-search","remove-duplicates-from-sorted-array-ii","search-in-rotated-sorted-array-ii","remove-duplicates-from-sorted-list-ii","remove-duplicates-from-sorted-list","largest-rectangle-in-histogram","maximal-rectangle","partition-list","scramble-string","merge-sorted-array","gray-code","subsets-ii","decode-ways","reverse-linked-list-ii","restore-ip-addresses","binary-tree-inorder-traversal","unique-binary-search-trees-ii","unique-binary-search-trees","interleaving-string","validate-binary-search-tree","recover-binary-search-tree","same-tree","symmetric-tree","binary-tree-level-order-traversal","binary-tree-zigzag-level-order-traversal","maximum-depth-of-binary-tree","construct-binary-tree-from-preorder-and-inorder-traversal","construct-binary-tree-from-inorder-and-postorder-traversal","binary-tree-level-order-traversal-ii","convert-sorted-array-to-binary-search-tree","convert-sorted-list-to-binary-search-tree","balanced-binary-tree","minimum-depth-of-binary-tree","path-sum","path-sum-ii","flatten-binary-tree-to-linked-list","distinct-subsequences","populating-next-right-pointers-in-each-node","populating-next-right-pointers-in-each-node-ii","pascals-triangle","pascals-triangle-ii","triangle","best-time-to-buy-and-sell-stock","best-time-to-buy-and-sell-stock-ii","best-time-to-buy-and-sell-stock-iii","binary-tree-maximum-path-sum","valid-palindrome","word-ladder-ii","word-ladder","longest-consecutive-sequence","sum-root-to-leaf-numbers","surrounded-regions","palindrome-partitioning","palindrome-partitioning-ii","clone-graph","gas-station","candy","single-number","single-number-ii","copy-list-with-random-pointer","word-break","word-break-ii","linked-list-cycle","linked-list-cycle-ii","reorder-list","binary-tree-preorder-traversal","binary-tree-postorder-traversal","lru-cache","insertion-sort-list","sort-list","max-points-on-a-line","evaluate-reverse-polish-notation","reverse-words-in-a-string","maximum-product-subarray","find-minimum-in-rotated-sorted-array","find-minimum-in-rotated-sorted-array-ii","min-stack","intersection-of-two-linked-lists","find-peak-element","maximum-gap","compare-version-numbers","fraction-to-recurring-decimal","two-sum-ii-input-array-is-sorted","excel-sheet-column-title","majority-element","excel-sheet-column-number","factorial-trailing-zeroes","binary-search-tree-iterator","dungeon-game","combine-two-tables","second-highest-salary","nth-highest-salary","rank-scores","largest-number","consecutive-numbers","employees-earning-more-than-their-managers","duplicate-emails","customers-who-never-order","department-highest-salary","department-top-three-salaries","repeated-dna-sequences","best-time-to-buy-and-sell-stock-iv","rotate-array","reverse-bits","number-of-1-bits","word-frequency","valid-phone-numbers","transpose-file","tenth-line","delete-duplicate-emails","rising-temperature","house-robber","binary-tree-right-side-view","number-of-islands","bitwise-and-of-numbers-range","happy-number","remove-linked-list-elements","count-primes","isomorphic-strings","reverse-linked-list","course-schedule","implement-trie-prefix-tree","minimum-size-subarray-sum","course-schedule-ii","add-and-search-word-data-structure-design","word-search-ii","house-robber-ii","shortest-palindrome","kth-largest-element-in-an-array","combination-sum-iii","contains-duplicate","the-skyline-problem","contains-duplicate-ii","contains-duplicate-iii","maximal-square","count-complete-tree-nodes","rectangle-area","basic-calculator","implement-stack-using-queues","invert-binary-tree","basic-calculator-ii","summary-ranges","majority-element-ii","kth-smallest-element-in-a-bst","power-of-two","implement-queue-using-stacks","number-of-digit-one","palindrome-linked-list","lowest-common-ancestor-of-a-binary-search-tree","lowest-common-ancestor-of-a-binary-tree","delete-node-in-a-linked-list","product-of-array-except-self","sliding-window-maximum","search-a-2d-matrix-ii","different-ways-to-add-parentheses","valid-anagram","binary-tree-paths","add-digits","single-number-iii","trips-and-users","ugly-number","ugly-number-ii","missing-number","integer-to-english-words","h-index","h-index-ii","first-bad-version","perfect-squares","expression-add-operators","move-zeroes","peeking-iterator","find-the-duplicate-number","game-of-life","word-pattern","nim-game","find-median-from-data-stream","serialize-and-deserialize-binary-tree","bulls-and-cows","longest-increasing-subsequence","remove-invalid-parentheses","range-sum-query-immutable","range-sum-query-2d-immutable","additive-number","range-sum-query-mutable","best-time-to-buy-and-sell-stock-with-cooldown","minimum-height-trees","burst-balloons","super-ugly-number","count-of-smaller-numbers-after-self","remove-duplicate-letters","maximum-product-of-word-lengths","bulb-switcher","create-maximum-number","coin-change","wiggle-sort-ii","power-of-three","count-of-range-sum","odd-even-linked-list","longest-increasing-path-in-a-matrix","patching-array","verify-preorder-serialization-of-a-binary-tree","reconstruct-itinerary","increasing-triplet-subsequence","self-crossing","palindrome-pairs","house-robber-iii","counting-bits","flatten-nested-list-iterator","power-of-four","integer-break","reverse-string","reverse-vowels-of-a-string","top-k-frequent-elements","intersection-of-two-arrays","intersection-of-two-arrays-ii","data-stream-as-disjoint-intervals","russian-doll-envelopes","design-twitter","count-numbers-with-unique-digits","max-sum-of-rectangle-no-larger-than-k","water-and-jug-problem","valid-perfect-square","largest-divisible-subset","sum-of-two-integers","super-pow","find-k-pairs-with-smallest-sums","guess-number-higher-or-lower","guess-number-higher-or-lower-ii","wiggle-subsequence","combination-sum-iv","kth-smallest-element-in-a-sorted-matrix","insert-delete-getrandom-o1","insert-delete-getrandom-o1-duplicates-allowed","linked-list-random-node","ransom-note","shuffle-an-array","mini-parser","lexicographical-numbers","first-unique-character-in-a-string","longest-absolute-file-path","find-the-difference","elimination-game","perfect-rectangle","is-subsequence","utf-8-validation","decode-string","longest-substring-with-at-least-k-repeating-characters","rotate-function","integer-replacement","random-pick-index","evaluate-division","nth-digit","binary-watch","remove-k-digits","frog-jump","sum-of-left-leaves","convert-a-number-to-hexadecimal","queue-reconstruction-by-height","trapping-rain-water-ii","longest-palindrome","split-array-largest-sum","fizz-buzz","arithmetic-slices","third-maximum-number","add-strings","partition-equal-subset-sum","pacific-atlantic-water-flow","battleships-in-a-board","strong-password-checker","maximum-xor-of-two-numbers-in-an-array","reconstruct-original-digits-from-english","longest-repeating-character-replacement","construct-quad-tree","n-ary-tree-level-order-traversal","flatten-a-multilevel-doubly-linked-list","all-oone-data-structure","minimum-genetic-mutation","number-of-segments-in-a-string","non-overlapping-intervals","find-right-interval","path-sum-iii","find-all-anagrams-in-a-string","k-th-smallest-in-lexicographical-order","arranging-coins","find-all-duplicates-in-an-array","string-compression","add-two-numbers-ii","arithmetic-slices-ii-subsequence","number-of-boomerangs","find-all-numbers-disappeared-in-an-array","serialize-and-deserialize-bst","delete-node-in-a-bst","sort-characters-by-frequency","minimum-number-of-arrows-to-burst-balloons","minimum-moves-to-equal-array-elements","4sum-ii","assign-cookies","132-pattern","circular-array-loop","poor-pigs","repeated-substring-pattern","lfu-cache","hamming-distance","minimum-moves-to-equal-array-elements-ii","island-perimeter","can-i-win","count-the-repetitions","unique-substrings-in-wraparound-string","validate-ip-address","implement-rand10-using-rand7","concatenated-words","matchsticks-to-square","ones-and-zeroes","heaters","number-complement","total-hamming-distance","generate-random-point-in-a-circle","largest-palindrome-product","sliding-window-median","magical-string","license-key-formatting","smallest-good-base","max-consecutive-ones","predict-the-winner","zuma-game","increasing-subsequences","construct-the-rectangle","reverse-pairs","target-sum","teemo-attacking","next-greater-element-i","random-point-in-non-overlapping-rectangles","diagonal-traverse","keyboard-row","find-mode-in-binary-search-tree","ipo","next-greater-element-ii","base-7","relative-ranks","perfect-number","most-frequent-subtree-sum","fibonacci-number","find-bottom-left-tree-value","freedom-trail","find-largest-value-in-each-tree-row","longest-palindromic-subsequence","super-washing-machines","coin-change-2","random-flip-matrix","detect-capital","longest-uncommon-subsequence-i","longest-uncommon-subsequence-ii","continuous-subarray-sum","longest-word-in-dictionary-through-deleting","contiguous-array","beautiful-arrangement","random-pick-with-weight","minesweeper","minimum-absolute-difference-in-bst","k-diff-pairs-in-an-array","encode-and-decode-tinyurl","complex-number-multiplication","convert-bst-to-greater-tree","minimum-time-difference","single-element-in-a-sorted-array","reverse-string-ii","01-matrix","diameter-of-binary-tree","remove-boxes","friend-circles","student-attendance-record-i","student-attendance-record-ii","optimal-division","brick-wall","next-greater-element-iii","reverse-words-in-a-string-iii","quad-tree-intersection","maximum-depth-of-n-ary-tree","subarray-sum-equals-k","array-partition-i","binary-tree-tilt","find-the-closest-palindrome","array-nesting","reshape-the-matrix","permutation-in-string","subtree-of-another-tree","distribute-candies","out-of-boundary-paths","shortest-unsorted-continuous-subarray","delete-operation-for-two-strings","erect-the-fence","n-ary-tree-preorder-traversal","n-ary-tree-postorder-traversal","tag-validator","fraction-addition-and-subtraction","valid-square","longest-harmonious-subsequence","big-countries","classes-more-than-5-students","range-addition-ii","minimum-index-sum-of-two-lists","non-negative-integers-without-consecutive-ones","human-traffic-of-stadium","can-place-flowers","construct-string-from-binary-tree","find-duplicate-file-in-system","valid-triangle-number","merge-two-binary-trees","not-boring-movies","task-scheduler","design-circular-queue","add-one-row-to-tree","exchange-seats","swap-salary","maximum-product-of-three-numbers","k-inverse-pairs-array","course-schedule-iii","smallest-range","sum-of-square-numbers","exclusive-time-of-functions","average-of-levels-in-binary-tree","shopping-offers","decode-ways-ii","solve-the-equation","design-circular-deque","maximum-average-subarray-i","set-mismatch","maximum-length-of-pair-chain","palindromic-substrings","replace-words","dota2-senate","2-keys-keyboard","find-duplicate-subtrees","two-sum-iv-input-is-a-bst","maximum-binary-tree","print-binary-tree","robot-return-to-origin","find-k-closest-elements","split-array-into-consecutive-subsequences","image-smoother","maximum-width-of-binary-tree","strange-printer","non-decreasing-array","beautiful-arrangement-ii","kth-smallest-number-in-multiplication-table","trim-a-binary-search-tree","maximum-swap","second-minimum-node-in-a-binary-tree","bulb-switcher-ii","number-of-longest-increasing-subsequence","longest-continuous-increasing-subsequence","cut-off-trees-for-golf-event","implement-magic-dictionary","map-sum-pairs","valid-parenthesis-string","24-game","valid-palindrome-ii","baseball-game","redundant-connection","redundant-connection-ii","repeated-string-match","longest-univalue-path","knight-probability-in-chessboard","maximum-sum-of-3-non-overlapping-subarrays","employee-importance","stickers-to-spell-word","top-k-frequent-words","binary-number-with-alternating-bits","max-area-of-island","count-binary-substrings","degree-of-an-array","partition-to-k-equal-sum-subsets","falling-squares","search-in-a-binary-search-tree","insert-into-a-binary-search-tree","kth-largest-element-in-a-stream","binary-search","design-hashset","design-hashmap","design-linked-list","to-lower-case","random-pick-with-blacklist","minimum-ascii-delete-sum-for-two-strings","subarray-product-less-than-k","best-time-to-buy-and-sell-stock-with-transaction-fee","range-module","1-bit-and-2-bit-characters","maximum-length-of-repeated-subarray","find-k-th-smallest-pair-distance","longest-word-in-dictionary","accounts-merge","remove-comments","find-pivot-index","split-linked-list-in-parts","number-of-atoms","self-dividing-numbers","my-calendar-i","count-different-palindromic-subsequences","my-calendar-ii","my-calendar-iii","flood-fill","asteroid-collision","parse-lisp-expression","monotone-increasing-digits","daily-temperatures","delete-and-earn","cherry-pickup","network-delay-time","find-smallest-letter-greater-than-target","prefix-and-suffix-search","min-cost-climbing-stairs","largest-number-at-least-twice-of-others","shortest-completing-word","contain-virus","open-the-lock","cracking-the-safe","reach-a-number","pyramid-transition-matrix","set-intersection-size-at-least-two","special-binary-string","prime-number-of-set-bits-in-binary-representation","partition-labels","largest-plus-sign","couples-holding-hands","toeplitz-matrix","reorganize-string","max-chunks-to-make-sorted-ii","max-chunks-to-make-sorted","basic-calculator-iv","jewels-and-stones","sliding-puzzle","global-and-local-inversions","swap-adjacent-in-lr-string","swim-in-rising-water","k-th-symbol-in-grammar","reaching-points","rabbits-in-forest","transform-to-chessboard","minimum-distance-between-bst-nodes","letter-case-permutation","is-graph-bipartite","k-th-smallest-prime-fraction","cheapest-flights-within-k-stops","rotated-digits","escape-the-ghosts","domino-and-tromino-tiling","custom-sort-string","number-of-matching-subsequences","preimage-size-of-factorial-zeroes-function","valid-tic-tac-toe-state","number-of-subarrays-with-bounded-maximum","rotate-string","all-paths-from-source-to-target","smallest-rotation-with-highest-score","champagne-tower","minimum-swaps-to-make-sequences-increasing","find-eventual-safe-states","bricks-falling-when-hit","unique-morse-code-words","split-array-with-same-average","number-of-lines-to-write-string","max-increase-to-keep-city-skyline","soup-servings","expressive-words","chalkboard-xor-game","subdomain-visit-count","largest-triangle-area","largest-sum-of-averages","binary-tree-pruning","bus-routes","ambiguous-coordinates","linked-list-components","race-car","most-common-word","short-encoding-of-words","shortest-distance-to-a-character","card-flipping-game","binary-trees-with-factors","goat-latin","friends-of-appropriate-ages","most-profit-assigning-work","making-a-large-island","unique-letter-string","consecutive-numbers-sum","positions-of-large-groups","masking-personal-information","flipping-an-image","find-and-replace-in-string","sum-of-distances-in-tree","image-overlap","rectangle-overlap","new-21-game","push-dominoes","similar-string-groups","magic-squares-in-grid","keys-and-rooms","split-array-into-fibonacci-sequence","guess-the-word","backspace-string-compare","longest-mountain-in-array","hand-of-straights","shortest-path-visiting-all-nodes","shifting-letters","maximize-distance-to-closest-person","rectangle-area-ii","loud-and-rich","peak-index-in-a-mountain-array","car-fleet","k-similar-strings","exam-room","score-of-parentheses","minimum-cost-to-hire-k-workers","mirror-reflection","buddy-strings","lemonade-change","score-after-flipping-matrix","shortest-subarray-with-sum-at-least-k","all-nodes-distance-k-in-binary-tree","shortest-path-to-get-all-keys","smallest-subtree-with-all-the-deepest-nodes","prime-palindrome","transpose-matrix","binary-gap","reordered-power-of-2","advantage-shuffle","minimum-number-of-refueling-stops","leaf-similar-trees","length-of-longest-fibonacci-subsequence","walking-robot-simulation","koko-eating-bananas","middle-of-the-linked-list","stone-game","nth-magical-number","profitable-schemes","decoded-string-at-index","boats-to-save-people","reachable-nodes-in-subdivided-graph","projection-area-of-3d-shapes","uncommon-words-from-two-sentences","spiral-matrix-iii","possible-bipartition","super-egg-drop","fair-candy-swap","construct-binary-tree-from-preorder-and-postorder-traversal","find-and-replace-pattern","sum-of-subsequence-widths","surface-area-of-3d-shapes","groups-of-special-equivalent-strings","all-possible-full-binary-trees","maximum-frequency-stack","monotonic-array","increasing-order-search-tree","bitwise-ors-of-subarrays","orderly-queue","rle-iterator","online-stock-span","numbers-at-most-n-given-digit-set","valid-permutations-for-di-sequence","fruit-into-baskets","sort-array-by-parity","super-palindromes","sum-of-subarray-minimums","smallest-range-i","snakes-and-ladders","smallest-range-ii","online-election","sort-an-array","cat-and-mouse","x-of-a-kind-in-a-deck-of-cards","partition-array-into-disjoint-intervals","word-subsets","reverse-only-letters","maximum-sum-circular-subarray","complete-binary-tree-inserter","number-of-music-playlists","minimum-add-to-make-parentheses-valid","sort-array-by-parity-ii","3sum-with-multiplicity","minimize-malware-spread","long-pressed-name","flip-string-to-monotone-increasing","three-equal-parts","minimize-malware-spread-ii","unique-email-addresses","binary-subarrays-with-sum","minimum-falling-path-sum","beautiful-array","number-of-recent-calls","shortest-bridge","knight-dialer","stamping-the-sequence","reorder-log-files","range-sum-of-bst","minimum-area-rectangle","distinct-subsequences-ii","valid-mountain-array","di-string-match","find-the-shortest-superstring","delete-columns-to-make-sorted","minimum-increment-to-make-array-unique","validate-stack-sequences","most-stones-removed-with-same-row-or-column","bag-of-tokens","largest-time-for-given-digits","reveal-cards-in-increasing-order","flip-equivalent-binary-trees","largest-component-size-by-common-factor","verifying-an-alien-dictionary","array-of-doubled-pairs","delete-columns-to-make-sorted-ii","tallest-billboard","prison-cells-after-n-days","check-completeness-of-a-binary-tree","regions-cut-by-slashes","delete-columns-to-make-sorted-iii","n-repeated-element-in-size-2n-array","maximum-width-ramp","minimum-area-rectangle-ii","least-operators-to-express-number","univalued-binary-tree","vowel-spellchecker","numbers-with-same-consecutive-differences","binary-tree-cameras","pancake-sorting","powerful-integers","flip-binary-tree-to-match-preorder-traversal","equal-rational-numbers","k-closest-points-to-origin","subarray-sums-divisible-by-k","odd-even-jump","largest-perimeter-triangle","squares-of-a-sorted-array","longest-turbulent-subarray","distribute-coins-in-binary-tree","unique-paths-iii","time-based-key-value-store","triples-with-bitwise-and-equal-to-zero","minimum-cost-for-tickets","string-without-aaa-or-bbb","sum-of-even-numbers-after-queries","interval-list-intersections","vertical-order-traversal-of-a-binary-tree","smallest-string-starting-from-leaf","add-to-array-form-of-integer","satisfiability-of-equality-equations","broken-calculator","subarrays-with-k-different-integers","cousins-in-binary-tree","rotting-oranges","minimum-number-of-k-consecutive-bit-flips","number-of-squareful-arrays","find-the-town-judge","maximum-binary-tree-ii","available-captures-for-rook","minimum-cost-to-merge-stones","grid-illumination","find-common-characters","check-if-word-is-valid-after-substitutions","max-consecutive-ones-iii","maximize-sum-of-array-after-k-negations","clumsy-factorial","minimum-domino-rotations-for-equal-row","construct-binary-search-tree-from-preorder-traversal","complement-of-base-10-integer","pairs-of-songs-with-total-durations-divisible-by-60","capacity-to-ship-packages-within-d-days","numbers-with-repeated-digits","partition-array-into-three-parts-with-equal-sum","best-sightseeing-pair","smallest-integer-divisible-by-k","binary-string-with-substrings-representing-1-to-n","convert-to-base-2","binary-prefix-divisible-by-5","next-greater-node-in-linked-list","number-of-enclaves","remove-outermost-parentheses","sum-of-root-to-leaf-binary-numbers","camelcase-matching","video-stitching","divisor-game","maximum-difference-between-node-and-ancestor","longest-arithmetic-sequence","recover-a-tree-from-preorder-traversal","two-city-scheduling","matrix-cells-in-distance-order","maximum-sum-of-two-non-overlapping-subarrays","stream-of-characters","moving-stones-until-consecutive","coloring-a-border","uncrossed-lines","escape-a-large-maze","valid-boomerang","binary-search-tree-to-greater-sum-tree","minimum-score-triangulation-of-polygon","moving-stones-until-consecutive-ii","robot-bounded-in-circle","flower-planting-with-no-adjacent","partition-array-for-maximum-sum","longest-duplicate-substring","last-stone-weight","remove-all-adjacent-duplicates-in-string","longest-string-chain","last-stone-weight-ii","height-checker","grumpy-bookstore-owner","previous-permutation-with-one-swap","distant-barcodes","greatest-common-divisor-of-strings","flip-columns-for-maximum-number-of-equal-rows","adding-two-negabinary-numbers","number-of-submatrices-that-sum-to-target","occurrences-after-bigram","letter-tile-possibilities","insufficient-nodes-in-root-to-leaf-paths","smallest-subsequence-of-distinct-characters"]
var dictDiffculty = {
        "Easy": "容易",
        "Medium": "中等",
        "Hard": "困难"
    },
    //需要去网页里更新token
    csrfToken = "moD1CD0fUCRawErZqdBsIoUNC8T3th55AW4f9MV5787VM6W6ywdYhEUpTQfEvpwP",
    leetCodeData = [];

/**
 * 调用 getQues 把数据保存到 leetCodeData, 然后输出
 */
function getQuestionData() {
    operateList.forEach(item => getQues(item));

    leetCodeData = leetCodeData.sort((a, b) => +a.questionFrontendId - +b.questionFrontendId);

    console.log("let data = " + JSON.stringify(leetCodeData).replace(/(\[|",)"/g, "$1\n\"").replace(/"questionFrontendId"/g, "\"questionId\"") + ";module.exports = data;");
}

/** 
 * 把 HTML 转成 txt
 */
function html2txt(str) {
    return str.replace(/<img[^>]*href="([^"]+)"[^>]*>/, "[示意图]($1)")
        .replace(/[\t\r]|<[^>]+>/g, "")
        .replace(/&lt;/g, "<")
        .replace(/&gt;/g, ">")
        .replace(/&nbsp;/g, " ")
        .replace(/&quot;/g, "\"")
        .replace(/\n +\n/g, "\n\n")
        .replace(/\n\n+/g, "\n\n")
        .replace(/^\s+|\s+$/, "")
        .replace(/(\n(示例|提示)[^\n]*\n)\n/g, "$1")
        .split("\n");
}

/**
 * 发送 graphQl 请求，把题目数据抓回来
 * @param {string} name - titleSlug
 */
function getQues(name) {

    $.ajax({
        url: "https://leetcode-cn.com/graphql",
        async: false,
        dataType: "json",
        type: "POST",
        data: {
            operationName: "questionData",
            query: "query questionData { question(titleSlug: \"" + name + "\") { questionFrontendId titleSlug translatedTitle translatedContent difficulty codeSnippets { lang code } }}",
        },
        beforeSend: function (jqXHR, settings) {
            jqXHR.setRequestHeader("x-csrftoken", csrfToken);
        },
        success: data => {
            var question = data.data.question,
                codejs = "N/A",
                codepy = "N/A";
            question.questionFrontendId = ("000" + question.questionFrontendId).slice(-4);
            //抓回来所有语言的题目，只保留JS和PY的，如果有PY3就保留PY3
            if (question.codeSnippets) {
                question.codeSnippets.forEach(i => {
                    if (i.lang === "JavaScript") codejs = i.code;
                    if (i.lang === "Python") codepy = "#Python 2\n\n" + i.code;
                    if (i.lang === "Python3") codepy = i.code;
                });
                question.codeSnippets = {
                    js: codejs,
                    py: codepy
                };
                question.difficulty = dictDiffculty[question.difficulty];
                question.translatedContent = html2txt(question.translatedContent);
                leetCodeData.push(question);
            }
        }
    });
}

getQuestionData();